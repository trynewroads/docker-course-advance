services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dbPass
      POSTGRES_DB: todo_db
    secrets:
      - dbPass
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0.1
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
        monitor: 30s
        max_failure_ratio: 0.1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  backend:
    image: ghcr.io/trynewroads/course-backend:1.0.0
    ports:
      - 3000:3000
    environment:
      - DB_HOST=db
      - USE_DB=true
      - DB_USER=postgres
      - DB_NAME=todo_db
      - NODE_ENV=production
      - DEFAULT_USER=defaultUser
      - DEFAULT_PASS=defaultPass
      - JWT_SECRET=jwtSecret
      - DB_PASS=dbPass

    secrets:
      - defaultUser
      - defaultPass
      - jwtSecret
      - dbPass

    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0.1
        order: start-first # Orden de actualización
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
        monitor: 30s
        max_failure_ratio: 0.1
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  web:
    image: ghcr.io/trynewroads/course-frontend:1.0.0
    ports:
      - "80:80"
    environment:
      - BACKEND_HOST=backend
      - BACKEND_PORT=3000
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0.1
        order: start-first # Orden de actualización
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
        monitor: 30s
        max_failure_ratio: 0.1
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

secrets:
  defaultUser:
    file: ./secrets/defaultUser.txt
  defaultPass:
    file: ./secrets/defaultPass.txt
  jwtSecret:
    file: ./secrets/jwtSecret.txt
  dbPass:
    file: ./secrets/dbPass.txt
