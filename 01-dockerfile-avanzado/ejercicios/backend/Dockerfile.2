# Etapa de build
FROM node:20 as build

WORKDIR /app

# Variables de entorno para build
ENV NODE_ENV=development

# Copia primero solo package.json y package-lock.json para aprovechar cache de dependencias
COPY package*.json ./
RUN npm install

# Ahora sí, copia el resto del código fuente
COPY . .

# Compila y limpia en una sola capa para reducir capas intermedias
RUN npm run build && npm cache clean --force

# Etapa de test
FROM node:20 as test
WORKDIR /app

# Variables de entorno para tests
ENV NODE_ENV=test
ENV PORT=3000
ENV DEBUG_REQUEST=false
ENV DEFAULT_USER=admin
ENV DEFAULT_PASS=12345678
ENV JWT_SECRET=secretKey
ENV ENABLE_AUTH=true
ENV USE_DB=false
ENV DB_HOST=localhost
ENV DB_PORT=5432
ENV DB_USER=todo_user
ENV DB_PASS=todo_pass
ENV DB_NAME=todo_db

COPY --from=build /app /app
RUN npm run test

# Etapa de producción
FROM node:20 as production
WORKDIR /app

# Variables de entorno para producción
ENV NODE_ENV=production
ENV PORT=3000
ENV DEBUG_REQUEST=false
ENV DEFAULT_USER=admin
ENV DEFAULT_PASS=12345678
ENV JWT_SECRET=secretKey
ENV ENABLE_AUTH=true
ENV USE_DB=false
ENV DB_HOST=localhost
ENV DB_PORT=5432
ENV DB_USER=todo_user
ENV DB_PASS=todo_pass
ENV DB_NAME=todo_db

COPY --from=build /app/dist ./dist
COPY --from=build /app/package.json .

# Instala solo dependencias de producción y limpia cache en la misma capa
RUN npm install --omit=dev && npm cache clean --force

EXPOSE $PORT

CMD ["node", "dist/main.js"]